name: Flatpak

on: [push]

env:
  FLATPAK_ID: com.valvesoftware.Steam.CompatibilityTool.Proton
  IMAGE_NAME: proton
  IMAGE_TAG: latest
  DOCKERHUB_USER: ${{ github.repository_owner }}
  DOCKERHUB_REPO: ${{ github.repository_owner }}/proton-flatpak
  FP_BUNDLE: proton-flatpak-${{ github.run_id }}
  FP_BRANCH: stable
  FP_BUILD_DIR: build-dir
  FP_BUILD_REPO: build-repo
  FLAT_MANAGER_URL: https://flatpak.russianfedora.online

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install flatpak-builder
      run: |
        set -e
        sudo add-apt-repository -y ppa:alexlarsson/flatpak
        sudo apt update -y
        sudo apt install -y flatpak-builder

    - name: Dump canonical manifest
      run: |
        set -e
        flatpak-builder --show-manifest ${FLATPAK_ID}.yml > canonical-manifest.json

    - name: Download flatpak SDK and sources
      run: |
        set -e
        flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        flatpak-builder --install-deps-from=flathub --install-deps-only --user /dev/null ${FLATPAK_ID}.yml
        flatpak-builder --download-only /dev/null ${FLATPAK_ID}.yml

    - name: Prime cache
      uses: actions/cache@v2
      with:
        path: |
          .flatpak-builder/ccache
        key: flatpak-builder-${{ hashFiles('canonical-manifest.json') }}
        restore-keys: |
          flatpak-builder-

    - name: Build flatpak
      run: |
        set -e
        flatpak-builder --disable-updates --disable-download --ccache --sandbox --repo=${FP_BUILD_REPO} ${FP_BUILD_DIR} ${FLATPAK_ID}.yml

    - name: Mark as EOL
      run: |
        set -e
        flatpak build-commit-from -v \
          --end-of-life='Migrated to Flathub' \
          ${FP_BUILD_REPO} \
          --src-ref=runtime/${FLATPAK_ID}/x86_64/${FP_BRANCH} \
                    runtime/${FLATPAK_ID}/x86_64/${FP_BRANCH}

    - name: Upload flatpak repo
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.FP_BUILD_REPO }}
        path: ${{ env.FP_BUILD_REPO }}

  publish-bundle:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Install flatpak
      run: |
        set -e
        sudo add-apt-repository -y ppa:alexlarsson/flatpak
        sudo apt update -y
        sudo apt install -y flatpak

    - name: Download flatpak repo
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.FP_BUILD_REPO }}
    
    - name: Create flatpak bundle
      run: |
        set -e
        flatpak build-bundle --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo --runtime ${FP_BUILD_REPO} ${FP_BUNDLE}.flatpak ${FLATPAK_ID} ${FP_BRANCH}

    - name: Upload flatpak bundle
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.FP_BUNDLE }}
        path: ${{ env.FP_BUNDLE }}.flatpak

  publish-ostree:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Install flat-manager-client
      run: |
        set -e
        sudo apt update -y
        sudo apt install -y python3-pip python3-setuptools python3-gi gir1.2-glib-2.0 gir1.2-ostree-1.0 wget
        sudo pip3 install aiohttp tenacity
        wget https://github.com/flatpak/flat-manager/raw/0.3.7/flat-manager-client
        chmod +x ./flat-manager-client

    - name: Download flatpak repo
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.FP_BUILD_REPO }}

    - name: Push flatpak repo
      env:
        REPO_TOKEN: ${{ secrets.FLATPAK_REPO_TOKEN }}
      #XXX empty directories are lost, but libostree needs them
      run: |
        set -e
        mkdir -p ${FP_BUILD_REPO}/{extensions,refs/{mirrors,remotes},state,tmp/cache}
        BUILD_URL="$(./flat-manager-client create "${FLAT_MANAGER_URL}" "${FP_BRANCH}")"
        ./flat-manager-client push --commit --publish --wait --wait-update "${BUILD_URL}" "${FP_BUILD_REPO}"

  publish-oci:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Install flatpak and libcontainers tools
      run: |
        set -e
        . /etc/os-release
        sudo sh -c "echo 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"
        curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
        sudo add-apt-repository -y ppa:alexlarsson/flatpak
        sudo apt update -y
        sudo apt install -y skopeo flatpak jq
    
    - name: Download flatpak repo
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.FP_BUILD_REPO }}

    - name: Create OCI bundle
      run: |
        set -e
        flatpak build-bundle \
          --oci \
          --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo \
          --runtime \
          ${FP_BUILD_REPO} ${FP_BUNDLE} ${FLATPAK_ID} ${FP_BRANCH}

    - name: Publish OCI image
      run: |
        set -e
        skopeo copy \
          --dest-creds ${DOCKERHUB_USER}:${{ secrets.DOCKERHUB_TOKEN }} \
          oci:${FP_BUNDLE} \
          docker://docker.io/$DOCKERHUB_REPO:$IMAGE_TAG

    - name: Update static index
      run: |
        set -e
        git clone -b gh-pages https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git gh-pages
        skopeo inspect docker://docker.io/$DOCKERHUB_REPO:$IMAGE_TAG | \
          jq '. as $img | { "Registry": "https://registry-1.docker.io/", "Results": [ { "Name": "'$DOCKERHUB_REPO'", "Images": [$img] } ] }' \
          > gh-pages/index/static
        cd gh-pages
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config user.name "Workflow trigger"
        git add index/static
        git commit -m "Update index for ${GITHUB_SHA:0:7}"
        git push
